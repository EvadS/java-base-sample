#!/bin/sh
###############################
#
# Version:1.0
#
###############################

SERVICE_HOME=/imn/app
SERVICE_NAME="$SERVICE_HOME/imn-umtptohttp"
CONTROL_SCRIPT_LOG=control_script.log
CFGDB_FILE="$SERVICE_NAME/cfgdb.properties"

function getProperty {
   PROP_KEY=$1
   PROP_VALUE=`cat $PROPERTY_FILE | grep "$PROP_KEY" | cut -d'=' -f2-`
   echo $PROP_VALUE
}

function generateJavaCommand {
    echo "# Construct Java Command"
    JAVA_CLASS_ARGS=$(getProperty "java_main_class_args")
    JAVA_CMD=$JAVA_HOME/bin/java' -DappName='$APP_NAME' '$JAVA_CMD_OPTS' '-classpath' '$JAVA_CLASSPATH' '$JAVA_CLASS' '$JAVA_CLASS_ARGS
    echo $JAVA_CMD
}

function logger {
   echo "$APP_NAME $@"
     if [[ -f $CONTROL_SCRIPT_LOG ]]; then
        today=`date +%Y-%m-%d.%H:%M:%S`
        echo "$today $APP_NAME $@" >> "$CONTROL_SCRIPT_LOG"
     fi
}

function validate {
    if [ ! -f $PROPERTY_FILE ]; then
       logger "File  $PROPERTY_FILE does not exist. Exiting..."
       exit 1
    fi

    if [ ! -f $CFGDB_FILE ]; then
       logger "File  $CFGDB_FILE does not exist. Exiting..."
       exit 1
    fi

    LOG_DIR=$(getProperty "log_dir")
    if [[ -z $LOG_DIR ]]; then
      logger "variable log_dir not set in conf/app.properties file. Setting default directory as /var/log/"
      LOG_DIR="/var/log"
    fi

    if [ ! -d $LOG_DIR ]; then
       logger "Creating directory $LOG_DIR"
       mkdir -p  $LOG_DIR
    fi

    if [ ! -d $LOG_DIR ]; then
       logger "unable to create directory $LOG_DIR. Exiting.."
       exit 1
    fi

    STATUS_DIR=$(getProperty "status_dir")
    if [[ -z $STATUS_DIR ]]; then
      logger "variable "status_dir" not set in conf/app.properties file. Setting default directory as /appdata/status "
      STATUS_DIR="/appdata/status"
    fi
    STATUS_DIR=$STATUS_DIR/$APP_NAME

    if [ ! -d $STATUS_DIR ]; then
       logger "Creating directory $STATUS_DIR"
       mkdir -p  $STATUS_DIR
    fi

    if [ ! -d $STATUS_DIR ]; then
       logger "unable to create directory $STATUS_DIR. Exiting.."
       exit 1
    fi

    APP_LOG_DIR=$LOG_DIR/$APP_NAME

    if [ ! -d $APP_LOG_DIR ]; then
       logger "Creating directory $APP_LOG_DIR"
       mkdir -p  $APP_LOG_DIR
    fi

    if [ ! -d $APP_LOG_DIR ]; then
       logger "unable to create directory log application directory $APP_LOG_DIR. Exiting.."
       exit 1
    fi

    APP_ERR_STD_LOGS=$(getProperty "app_err_std_logs")

   if [[ -z $APP_ERR_STD_LOGS ]]; then
      logger "variable app_err_std_logs is not set  in conf/app.properties file. Setting default app_err_std_logs to application.log "
      APP_ERR_STD_LOGS=$APP_LOG_DIR/application.log
   fi

   CONTROL_SCRIPT_LOG=$APP_LOG_DIR/control_script.log

    if [ $@ == "start" ]; then
       today=`date +%Y-%m-%d.%H:%M:%S`

       if [ -f $CONTROL_SCRIPT_LOG ]; then
          mv $CONTROL_SCRIPT_LOG $CONTROL_SCRIPT_LOG.$today
       fi
    fi

    if [ ! -f $CONTROL_SCRIPT_LOG ]; then
        cat /dev/null > $CONTROL_SCRIPT_LOG
    fi

    PID_FILE_NAME=$(getProperty "pid_file_name")

    if [[ -z $PID_FILE_NAME ]]; then
      logger "variable pid_file_name not set in conf/app.properties file. Setting default pid file as pid.file"
      PID_FILE_NAME="pid.file"
    fi

    JAVA_HOME=$(getProperty "java_home")
    if [[ -z $JAVA_HOME ]]; then
      logger "please set java_home  in conf/app.properties file."
      exit 1
    fi

    JAVA_CLASS=$(getProperty "java_main_class_name")
    if [[ -z $JAVA_CLASS ]]; then
      logger "please set java_main_class_name  in conf/app.properties file."
      exit 1
    fi

    JAVA_CLASSPATH=$(getProperty "java_classpath")
    if [[ -z $JAVA_CLASSPATH ]]; then
      logger "variable java_classpath is not set  in conf/app.properties file. Setting default classpath to conf and lib/*"
      JAVA_CLASSPATH="lib/*:conf/"
    fi

    JAVA_CMD_OPTS=$(getProperty "java_cmd_options")
    if [[ -z $JAVA_CMD_OPTS ]]; then
      logger "variable java_main_class_args is not set  in conf/app.properties file. Setting default java options to -Xms128m -Xmx256m "
      JAVA_CMD_OPTS=-Xms128m -Xmx256m
    fi

    readCfgDBProperties

}

function checkProcess {
    if [ -f $STATUS_DIR/$PID_FILE_NAME ]; then
        PID=`cat $STATUS_DIR/$PID_FILE_NAME`
    fi
    if [[ -n $PID ]]; then
      PID=`ps -ef | grep java | grep -w DappName=$APP_NAME | grep $PID | awk -F" " '{print $2}'`
    else
      PID=`ps -ef | grep java | grep -w DappName=$APP_NAME | awk -F" " '{print $2}'`
    fi
    if [[ -z $PID ]]; then
      STATUS="NOT RUNNING"
      if [ -f $STATUS_DIR/$PID_FILE_NAME ]; then
         logger "removing pid file  $STATUS_DIR/$PID_FILE_NAME"
         rm -rf  $STATUS_DIR/$PID_FILE_NAME
      fi
    else
      STATUS="RUNNING"
    fi
    logger $STATUS
}

function readCfgDBProperties {
        file="$CFGDB_FILE"

        while IFS='=' read -r key value
        do
                JAVA_CMD_OPTS="$JAVA_CMD_OPTS -D$key=$value"
        done < "$file"

        JAVA_CMD_OPTS="$JAVA_CMD_OPTS -Dcfg-db.app=$APP_NAME"

}

function start {
 checkProcess

 if [[ $STATUS == "RUNNING" ]]; then
   exit 1
 fi

 today=`date +%Y-%m-%d.%H:%M:%S`

 if [ -f $APP_LOG_DIR/$APP_ERR_STD_LOGS ]; then
        mv $APP_LOG_DIR/$APP_ERR_STD_LOGS $APP_LOG_DIR/$APP_ERR_STD_LOGS.$today
 fi

 generateJavaCommand
 cd "${SERVICE_NAME}"
 nohup $JAVA_CMD >> $APP_LOG_DIR/$APP_ERR_STD_LOGS 2>&1 &
 echo $! > $STATUS_DIR/$PID_FILE_NAME
}

function status {
  checkProcess
}

function stop {
   checkProcess
    if [[ $STATUS == "RUNNING" ]]; then
       logger "stopping process with pid $PID"
       kill $PID
       sleep 1
    fi
    checkProcess
    if [[ $STATUS == "RUNNING" ]]; then
       logger "force kill pid $PID"
       kill -9 $PID
    fi
    checkProcess
    if [[ $STATUS == "RUNNING" ]]; then
      logger "unable to stop the process with pid $PID"
      exit 1
    fi
}

if [ "$#" -ne 2 ]; then
  logger "usage: ./control [start|stop|status]  <appname>"
  exit 1
fi

APP_NAME=$2
PROPERTY_FILE="$SERVICE_NAME/conf/app_$APP_NAME.properties"

if [ ! -f $PROPERTY_FILE ]; then
    logger "File  $PROPERTY_FILE does not exist. Using app.properties file"
    PROPERTY_FILE="$SERVICE_NAME/conf/app.properties"
fi

case "$1" in

start) validate $1
       start
       ;;
stop) validate $1
      stop
       ;;
status) validate $1
        status
       ;;
*) logger "usage: ./control [start|stop|status]  <appname>"
      ;;
esac

